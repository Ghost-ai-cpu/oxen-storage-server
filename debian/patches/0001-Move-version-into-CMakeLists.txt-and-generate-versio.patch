From: Jason Rhinelander <jason@imaginary.ca>
Date: Tue, 12 Jan 2021 18:52:26 -0400
Subject: Move version into CMakeLists.txt and generate version.cpp

Having the version available in CMakeLists.txt lets cmake use the
version (e.g. in the following commit which generates a tar file).

Moreover it improves ccache hits drastically as this no longer needs to
pass version/tags via defined and instead only the version.cpp file has
to be rebuilt if a git tag or version changes.

This also simplifies how the version gets parsed to use std::from_chars
and a std::array<uint16_t,3> rather than a struct, which lets `<` work
for version comparison.
---
 CMakeLists.txt                  |  4 ++-
 httpserver/CMakeLists.txt       | 22 ++++++++++------
 httpserver/dns_text_records.cpp | 56 +++++++----------------------------------
 httpserver/main.cpp             |  4 +--
 httpserver/service_node.cpp     |  6 ++---
 httpserver/version.cpp.in       | 10 ++++++++
 httpserver/version.h            | 42 ++++++-------------------------
 7 files changed, 49 insertions(+), 95 deletions(-)
 create mode 100644 httpserver/version.cpp.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 03aceb4..50dfbe7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,7 +12,9 @@ endif()
 
 cmake_minimum_required(VERSION 3.10)
 
-project(storage_server)
+project(storage_server
+    VERSION 2.0.8
+    LANGUAGES CXX C)
 
 option(INTEGRATION_TEST "build for integration test" OFF)
 option(DISABLE_SNODE_SIGNATURE "Generate and verify signatures for inter-snode communication"
diff --git a/httpserver/CMakeLists.txt b/httpserver/CMakeLists.txt
index 132fd37..604e695 100644
--- a/httpserver/CMakeLists.txt
+++ b/httpserver/CMakeLists.txt
@@ -55,17 +55,23 @@ set_target_properties(httpserver PROPERTIES OUTPUT_NAME ${BIN_NAME})
 target_link_libraries(httpserver PRIVATE httpserver_lib)
 install(TARGETS httpserver DESTINATION bin)
 # Build Info
-execute_process(
-    COMMAND
-        git rev-parse --short HEAD
-    OUTPUT_VARIABLE
-        SHORT_HASH
-    OUTPUT_STRIP_TRAILING_WHITESPACE)
+find_package(Git)
+if(GIT_FOUND)
+    execute_process(
+        COMMAND
+            git rev-parse --short HEAD
+        OUTPUT_VARIABLE
+            SHORT_HASH
+        OUTPUT_STRIP_TRAILING_WHITESPACE)
+else()
+    set(SHORT_HASH "unknown")
+endif()
 string(TIMESTAMP BUILD_TIME UTC)
 message(STATUS "using git commit hash ${SHORT_HASH}")
 message(STATUS "using UTC build time ${BUILD_TIME}")
-target_compile_definitions(httpserver PRIVATE -DSTORAGE_SERVER_GIT_HASH_STRING="${SHORT_HASH}")
-target_compile_definitions(httpserver PRIVATE -DSTORAGE_SERVER_BUILD_TIME="${BUILD_TIME}")
+configure_file("${CMAKE_CURRENT_SOURCE_DIR}/version.cpp.in" "${CMAKE_CURRENT_BINARY_DIR}/version.cpp")
+target_sources(httpserver_lib PRIVATE "${CMAKE_CURRENT_BINARY_DIR}/version.cpp")
+target_include_directories(httpserver_lib PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}")
 
 find_package(PkgConfig QUIET)
 if(PKG_CONFIG_FOUND)
diff --git a/httpserver/dns_text_records.cpp b/httpserver/dns_text_records.cpp
index 689e57f..41c1a20 100644
--- a/httpserver/dns_text_records.cpp
+++ b/httpserver/dns_text_records.cpp
@@ -4,6 +4,7 @@
 #include "version.h"
 #include <netinet/in.h>
 #include <resolv.h>
+#include <charconv>
 
 #include <boost/algorithm/string.hpp>
 
@@ -99,59 +100,20 @@ static std::string query_latest_version() {
     return version_str;
 }
 
-struct version_t {
-    int major;
-    int minor;
-    int patch;
-};
-
-static bool is_old_version(version_t latest) {
-
-    if (VERSION_MAJOR > latest.major) {
-        return false;
-    }
-
-    if (VERSION_MAJOR < latest.major) {
-        return true;
-    }
-
-    // === the same major version ===
-
-    if (VERSION_MINOR > latest.minor) {
-        return false;
-    }
-
-    if (VERSION_MINOR < latest.minor) {
-        return true;
-    }
-
-    // === the same minor version ===
-
-    if (VERSION_PATCH >= latest.patch) {
-        return false;
-    } else {
-        return true;
-    }
-}
+using version_t = std::array<uint16_t, 3>;
 
 static bool parse_version(const std::string& str, version_t& version_out) {
     std::vector<std::string> strs;
     strs.reserve(3);
     boost::split(strs, str, boost::is_any_of("."));
-    if (strs.size() != 3) {
-        OXEN_LOG(warn, "Invalid format for the Storage Server version!");
+    if (strs.size() != 3)
         return false;
-    }
 
-    try {
-        version_out.major = std::stoi(strs[0]);
-        version_out.minor = std::stoi(strs[1]);
-        version_out.patch = std::stoi(strs[2]);
-    } catch (const std::exception& e) {
-        OXEN_LOG(warn,
-                 "Invalid format for the Storage Server version! Error: {}",
-                 e.what());
-        return false;
+    for (size_t i = 0; i < 3; i++) {
+        auto* end = strs[i].data() + strs[i].size();
+        auto [p, ec] = std::from_chars(strs[i].data(), end, version_out[i]);
+        if (ec != std::errc() || p != end)
+            return false;
     }
 
     return true;
@@ -174,7 +136,7 @@ void check_latest_version() {
         return;
     }
 
-    if (is_old_version(latest_version)) {
+    if (STORAGE_SERVER_VERSION < latest_version) {
         OXEN_LOG(warn,
                  "You are using an outdated version of the storage server "
                  "({}), please update to {}!",
diff --git a/httpserver/main.cpp b/httpserver/main.cpp
index 3acff68..71e84c0 100644
--- a/httpserver/main.cpp
+++ b/httpserver/main.cpp
@@ -77,7 +77,7 @@ int main(int argc, char* argv[]) {
     }
 
     if (options.print_version) {
-        std::cout << version_info();
+        std::cout << STORAGE_SERVER_VERSION_INFO;
         return EXIT_SUCCESS;
     }
 
@@ -112,7 +112,7 @@ int main(int argc, char* argv[]) {
     }
 
     // Always print version for the logs
-    print_version();
+    OXEN_LOG(info, "{}", STORAGE_SERVER_VERSION_INFO);
 
     if (options.ip == "127.0.0.1") {
         OXEN_LOG(critical,
diff --git a/httpserver/service_node.cpp b/httpserver/service_node.cpp
index 27b7f7c..77dc685 100644
--- a/httpserver/service_node.cpp
+++ b/httpserver/service_node.cpp
@@ -1002,9 +1002,9 @@ void ServiceNode::oxend_ping_timer_tick() {
     };
 
     json params;
-    params["version_major"] = VERSION_MAJOR;
-    params["version_minor"] = VERSION_MINOR;
-    params["version_patch"] = VERSION_PATCH;
+    params["version_major"] = STORAGE_SERVER_VERSION[0];
+    params["version_minor"] = STORAGE_SERVER_VERSION[1];
+    params["version_patch"] = STORAGE_SERVER_VERSION[2];
     params["storage_lmq_port"] = lmq_server_.port();
 
     oxend_client_.make_oxend_request("storage_server_ping", params,
diff --git a/httpserver/version.cpp.in b/httpserver/version.cpp.in
new file mode 100644
index 0000000..cc528cb
--- /dev/null
+++ b/httpserver/version.cpp.in
@@ -0,0 +1,10 @@
+#include "version.h"
+
+using namespace std::literals;
+
+const std::array<uint16_t, 3> STORAGE_SERVER_VERSION = {@PROJECT_VERSION_MAJOR@, @PROJECT_VERSION_MINOR@, @PROJECT_VERSION_PATCH@};
+
+const std::string_view STORAGE_SERVER_VERSION_STRING = "@PROJECT_VERSION@"sv;
+const std::string_view STORAGE_SERVER_GIT_HASH_STRING = "@SHORT_HASH@"sv;
+const std::string_view STORAGE_SERVER_BUILD_TIME = "@BUILD_TIME@"sv;
+const std::string_view STORAGE_SERVER_VERSION_INFO = "Oxen Storage Server v@PROJECT_VERSION\n git commit hash: @SHORT_HASH\n build time: @BUILD_TIME@\n"sv;
diff --git a/httpserver/version.h b/httpserver/version.h
index e4664a3..643a553 100644
--- a/httpserver/version.h
+++ b/httpserver/version.h
@@ -1,37 +1,11 @@
 #pragma once
+#include <cstdint>
+#include <array>
+#include <string_view>
 
-#include "oxen_logger.h"
+extern const std::array<uint16_t, 3> STORAGE_SERVER_VERSION;
 
-#include <iostream>
-
-#define VERSION_MAJOR 2
-#define VERSION_MINOR 0
-#define VERSION_PATCH 8
-
-#define OXEN_STRINGIFY2(val) #val
-#define OXEN_STRINGIFY(val) OXEN_STRINGIFY2(val)
-
-#define VERSION_MAJOR_STR OXEN_STRINGIFY(VERSION_MAJOR)
-#define VERSION_MINOR_STR OXEN_STRINGIFY(VERSION_MINOR)
-#define VERSION_PATCH_STR OXEN_STRINGIFY(VERSION_PATCH)
-
-#ifndef STORAGE_SERVER_VERSION_STRING
-#define STORAGE_SERVER_VERSION_STRING                                          \
-    VERSION_MAJOR_STR "." VERSION_MINOR_STR "." VERSION_PATCH_STR
-#endif
-
-#ifndef STORAGE_SERVER_GIT_HASH_STRING
-#define STORAGE_SERVER_GIT_HASH_STRING "?"
-#endif
-
-#ifndef STORAGE_SERVER_BUILD_TIME
-#define STORAGE_SERVER_BUILD_TIME "?"
-#endif
-
-inline std::string version_info() {
-    return fmt::format(
-        "Oxen Storage Server v{}\n git commit hash: {}\n build time: {}\n",
-        STORAGE_SERVER_VERSION_STRING, STORAGE_SERVER_GIT_HASH_STRING,
-        STORAGE_SERVER_BUILD_TIME);
-}
-inline void print_version() { OXEN_LOG(info, "{}", version_info()); }
+extern const std::string_view STORAGE_SERVER_VERSION_STRING;
+extern const std::string_view STORAGE_SERVER_GIT_HASH_STRING;
+extern const std::string_view STORAGE_SERVER_BUILD_TIME;
+extern const std::string_view STORAGE_SERVER_VERSION_INFO;
